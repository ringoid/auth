AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Auth Service


Mappings:
  LogMap:
    PapertrailLog:
      stage: "logs7.papertrailapp.com:23213"
      prod: "should-be-prod-papertril-endpoint"

  UserTableCUMap:
    stage:
      wcumax: 1
      wcucrt: 1
      wcumin: 1
      rcumax: 1
      rcucrt: 1
      rcumin: 1
    prod:
      wcumax: should-be-prod-value
      wcucrt: should-be-prod-value
      wcumin: should-be-prod-value
      rcumax: should-be-prod-value
      rcucrt: should-be-prod-value
      rcumin: should-be-prod-value

  UserProfileTableCUMap:
    stage:
      wcumax: 1
      wcucrt: 1
      wcumin: 1
      rcumax: 1
      rcucrt: 1
      rcumin: 1
    prod:
      wcumax: should-be-prod-value
      wcucrt: should-be-prod-value
      wcumin: should-be-prod-value
      rcumax: should-be-prod-value
      rcucrt: should-be-prod-value
      rcumin: should-be-prod-value

  UserSettingsTableCUMap:
    stage:
      wcumax: 1
      wcucrt: 1
      wcumin: 1
      rcumax: 1
      rcucrt: 1
      rcumin: 1
    prod:
      wcumax: should-be-prod-value
      wcucrt: should-be-prod-value
      wcumin: should-be-prod-value
      rcumax: should-be-prod-value
      rcucrt: should-be-prod-value
      rcumin: should-be-prod-value


Parameters:
  Env:
    Type: String
    Default: stage
    AllowedValues:
      - stage
      - prod
    Description: Env name

Globals:
    Function:
        Timeout: 300
        MemorySize: 512
        Runtime: go1.x
        Environment:
          Variables:
            ENV: !Ref Env
            PAPERTRAIL_LOG_ADDRESS: !FindInMap [LogMap, PapertrailLog, !Ref Env]
            DELIVERY_STREAM:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, DeliveryStreamExportName] ]
            USER_TABLE: !Ref UserTable
            USER_PROFILE_TABLE: !Ref UserProfileTable
            USER_SETTINGS_TABLE: !Ref UserSettingsTable
            NEO4J_URL:
              Fn::ImportValue:
                !Join [ "-", [ !Ref Env, Neo4jLoadBalancerUrlExport] ]

        Tags:
          Company: Ringoid
          Service: auth
          Environment: !Ref Env

Resources:

  ScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "application-autoscaling.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "dynamodb:DescribeTable"
                  - "dynamodb:UpdateTable"
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:GetMetricStatistics"
                  - "cloudwatch:SetAlarmState"
                  - "cloudwatch:DeleteAlarms"
                Resource: "*"

  StartAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ "-", [ !Ref Env, start-auth] ]
      Handler: start
      CodeUri: ./start-auth.zip
      Description: Start auth function
      Policies:
        - AmazonDynamoDBFullAccess
        - SecretsManagerReadWrite
        - AmazonKinesisFirehoseFullAccess
      Events:
        StartEvent:
          Type: Api
          Properties:
            Path: /start_verification
            Method: post

  CompleteAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ "-", [ !Ref Env, complete-auth] ]
      Handler: complete
      CodeUri: ./complete-auth.zip
      Description: Complete auth function
      Policies:
        - AmazonDynamoDBFullAccess
        - SecretsManagerReadWrite
        - AmazonKinesisFirehoseFullAccess

      Events:
        CompleteEvent:
          Type: Api
          Properties:
            Path: /complete_verification
            Method: post

  CreateAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ "-", [ !Ref Env, create-auth] ]
      Handler: create
      CodeUri: ./create-auth.zip
      Description: Create user profile auth function
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonKinesisFirehoseFullAccess
        - SecretsManagerReadWrite
      Events:
        CompleteEvent:
          Type: Api
          Properties:
            Path: /create_profile
            Method: post

  UpdateSettingsAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ "-", [ !Ref Env, update-settings-auth] ]
      Handler: update_settings
      CodeUri: ./update-settings-auth.zip
      Description: Update user's settings function
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonKinesisFirehoseFullAccess
        - SecretsManagerReadWrite
      Events:
        CompleteEvent:
          Type: Api
          Properties:
            Path: /update_settings
            Method: post

  GetSettingsAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ "-", [ !Ref Env, get-settings-auth] ]
      Handler: get_settings
      CodeUri: ./get-settings-auth.zip
      Description: Get user's settings function
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonKinesisFirehoseFullAccess
        - SecretsManagerReadWrite
      Events:
        CompleteEvent:
          Type: Api
          Properties:
            Path: /get_settings
            Method: get

  InternalGetUserIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ "-", [ !Ref Env, internal-getuserid-auth] ]
      Handler: internal_get_user_id
      CodeUri: ./internal-getuserid-auth.zip
      Description: Internal function to get userId
      Policies:
        - AmazonDynamoDBFullAccess
        - SecretsManagerReadWrite

  LogoutAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ "-", [ !Ref Env, logout-auth] ]
      Handler: logout
      CodeUri: ./logout-auth.zip
      Description: Logout auth function
      Policies:
        - AmazonDynamoDBFullAccess
        - SecretsManagerReadWrite
        - AmazonKinesisFirehoseFullAccess
      Events:
        StartEvent:
          Type: Api
          Properties:
            Path: /logout
            Method: post

  UserProfileTable:
    Type: AWS::DynamoDB::Table
    Properties:
          TableName: !Join [ "-", [ !Ref Env, Auth, UserProfileTable] ]
          AttributeDefinitions:
            -
              AttributeName: user_id
              AttributeType: S
          KeySchema:
            -
              AttributeName: user_id
              KeyType: HASH

          ProvisionedThroughput:
            ReadCapacityUnits: !FindInMap [UserProfileTableCUMap, !Ref Env, rcucrt]
            WriteCapacityUnits: !FindInMap [UserProfileTableCUMap, !Ref Env, wcucrt]

          Tags:
            - Key: Company
              Value: Ringoid
            - Key: Service
              Value: auth
            - Key: Environment
              Value: !Ref Env

  UserProfileTableWriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserProfileTable
    Properties:
      MaxCapacity: !FindInMap [UserProfileTableCUMap, !Ref Env, wcumax]
      MinCapacity: !FindInMap [UserProfileTableCUMap, !Ref Env, wcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserProfileTable] ]
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  UserProfileTableReadCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserProfileTable
    Properties:
      MaxCapacity: !FindInMap [UserProfileTableCUMap, !Ref Env, rcumax]
      MinCapacity: !FindInMap [UserProfileTableCUMap, !Ref Env, rcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserProfileTable] ]
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:table:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  UserProfileTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserProfileTable
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserProfileTableWriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  UserProfileTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserProfileTable
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserProfileTableReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization


  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
          TableName: !Join [ "-", [ !Ref Env, Auth, UserTable] ]
          AttributeDefinitions:
            -
              AttributeName: phone
              AttributeType: S
            -
              AttributeName: user_id
              AttributeType: S
            -
              AttributeName: session_id
              AttributeType: S
          KeySchema:
            -
              AttributeName: phone
              KeyType: HASH

          ProvisionedThroughput:
            ReadCapacityUnits: !FindInMap [UserTableCUMap, !Ref Env, rcucrt]
            WriteCapacityUnits: !FindInMap [UserTableCUMap, !Ref Env, wcucrt]

          GlobalSecondaryIndexes:
            -
              IndexName: userIdGSI
              KeySchema:
                -
                  AttributeName: user_id
                  KeyType: HASH
              Projection:
                ProjectionType: ALL
              ProvisionedThroughput:
                ReadCapacityUnits: !FindInMap [UserTableCUMap, !Ref Env, rcucrt]
                WriteCapacityUnits: !FindInMap [UserTableCUMap, !Ref Env, wcucrt]
            -
              IndexName: sessionGSI
              KeySchema:
                -
                  AttributeName: session_id
                  KeyType: HASH
              Projection:
                ProjectionType: ALL
              ProvisionedThroughput:
                ReadCapacityUnits: !FindInMap [UserTableCUMap, !Ref Env, rcucrt]
                WriteCapacityUnits: !FindInMap [UserTableCUMap, !Ref Env, wcucrt]
          Tags:
            - Key: Company
              Value: Ringoid
            - Key: Service
              Value: auth
            - Key: Environment
              Value: !Ref Env

  UserTableWriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserTable
    Properties:
      MaxCapacity: !FindInMap [UserTableCUMap, !Ref Env, wcumax]
      MinCapacity: !FindInMap [UserTableCUMap, !Ref Env, wcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserTable] ]
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  UserTableReadCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserTable
    Properties:
      MaxCapacity: !FindInMap [UserTableCUMap, !Ref Env, rcumax]
      MinCapacity: !FindInMap [UserTableCUMap, !Ref Env, rcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserTable] ]
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:table:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  UserTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserTable
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserTableWriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  UserTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserTable
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserTableReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

  UserTableUserIdGSIWriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserTable
    Properties:
      MaxCapacity: !FindInMap [UserTableCUMap, !Ref Env, wcumax]
      MinCapacity: !FindInMap [UserTableCUMap, !Ref Env, wcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserTable] ]
          - index
          - userIdGSI
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:index:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  UserTableUserIdGSIReadCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserTable
    Properties:
      MaxCapacity: !FindInMap [UserTableCUMap, !Ref Env, rcumax]
      MinCapacity: !FindInMap [UserTableCUMap, !Ref Env, rcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserTable] ]
          - index
          - userIdGSI
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:index:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  UserTableUserIdGSIWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserTable
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserTableUserIdGSIWriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  UserTableUserIdGSIReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserTable
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserTableUserIdGSIReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

  UserTableSessionGSIWriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserTable
    Properties:
      MaxCapacity: !FindInMap [UserTableCUMap, !Ref Env, wcumax]
      MinCapacity: !FindInMap [UserTableCUMap, !Ref Env, wcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserTable] ]
          - index
          - sessionGSI
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:index:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  UserTableSessionGSIReadCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserTable
    Properties:
      MaxCapacity: !FindInMap [UserTableCUMap, !Ref Env, rcumax]
      MinCapacity: !FindInMap [UserTableCUMap, !Ref Env, rcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserTable] ]
          - index
          - sessionGSI
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:index:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  UserTableSessionGSIWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserTable
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserTableSessionGSIWriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  UserTableSessionGSIReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserTable
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserTableSessionGSIReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

  UserSettingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
          TableName: !Join [ "-", [ !Ref Env, Auth, UserSettings] ]
          AttributeDefinitions:
            -
              AttributeName: user_id
              AttributeType: S
          KeySchema:
            -
              AttributeName: user_id
              KeyType: HASH

          ProvisionedThroughput:
            ReadCapacityUnits: !FindInMap [UserSettingsTableCUMap, !Ref Env, rcucrt]
            WriteCapacityUnits: !FindInMap [UserSettingsTableCUMap, !Ref Env, wcucrt]
          Tags:
            - Key: Company
              Value: Ringoid
            - Key: Service
              Value: auth
            - Key: Environment
              Value: !Ref Env

  UserSettingsTableWriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserSettingsTable
    Properties:
      MaxCapacity: !FindInMap [UserSettingsTableCUMap, !Ref Env, wcumax]
      MinCapacity: !FindInMap [UserSettingsTableCUMap, !Ref Env, wcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserSettings] ]
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  UserSettingsTableReadCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: UserSettingsTable
    Properties:
      MaxCapacity: !FindInMap [UserSettingsTableCUMap, !Ref Env, rcumax]
      MinCapacity: !FindInMap [UserSettingsTableCUMap, !Ref Env, rcumin]
      ResourceId: !Join
        - /
        - - table
          - !Join [ "-", [ !Ref Env, Auth, UserSettings] ]
      RoleARN: !GetAtt
        - ScalingRole
        - Arn
      ScalableDimension: "dynamodb:table:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  UserSettingsTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserSettingsTable
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserSettingsTableWriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  UserSettingsTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: UserSettingsTable
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: UserSettingsTableReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization


Outputs:

  StartAuthApi:
    Description: "API Gateway endpoint URL for Prod stage for start-auth function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/start_verification"

  StartAuthFunction:
      Description: "start-auth lambda function ARN"
      Value: !GetAtt StartAuthFunction.Arn

  CompleteAuthApi:
    Description: "API Gateway endpoint URL for Prod stage for complete-auth function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/complete_verification"

  CompleteAuthFunction:
      Description: "complete-auth lambda function ARN"
      Value: !GetAtt CompleteAuthFunction.Arn

  InternalGetUserIdFunctionExport:
    Value:
      Fn::GetAtt:
        - InternalGetUserIdFunction
        - Arn
    Export:
      Name: !Join [ "-", [ !Ref Env, InternalGetUserIdFunctionExport] ]
